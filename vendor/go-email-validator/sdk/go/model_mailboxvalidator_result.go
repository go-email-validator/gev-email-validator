/*
 * Email Validator
 *
 * All timeouts are set in seconds with nanosecond precision. For example, 1.505402 is 1 second, 505 milliseconds and 402 microseconds. 
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MailboxvalidatorResult struct for MailboxvalidatorResult
type MailboxvalidatorResult struct {
	EmailAddress *string `json:"email_address,omitempty"`
	Domain *string `json:"domain,omitempty"`
	IsFree *string `json:"is_free,omitempty"`
	IsSyntax *string `json:"is_syntax,omitempty"`
	IsDomain *string `json:"is_domain,omitempty"`
	IsSmtp *string `json:"is_smtp,omitempty"`
	IsVerified *string `json:"is_verified,omitempty"`
	IsServerDown *string `json:"is_server_down,omitempty"`
	IsGreylisted *string `json:"is_greylisted,omitempty"`
	IsDisposable *string `json:"is_disposable,omitempty"`
	IsSuppressed *string `json:"is_suppressed,omitempty"`
	IsRole *string `json:"is_role,omitempty"`
	IsHighRisk *string `json:"is_high_risk,omitempty"`
	IsCatchall *string `json:"is_catchall,omitempty"`
	MailboxvalidatorScore *string `json:"mailboxvalidator_score,omitempty"`
	TimeTaken *string `json:"time_taken,omitempty"`
	Status *string `json:"status,omitempty"`
	CreditsAvailable *int64 `json:"credits_available,omitempty"`
	ErrorCode *string `json:"error_code,omitempty"`
	ErrorMessage *string `json:"error_message,omitempty"`
}

// NewMailboxvalidatorResult instantiates a new MailboxvalidatorResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailboxvalidatorResult() *MailboxvalidatorResult {
	this := MailboxvalidatorResult{}
	return &this
}

// NewMailboxvalidatorResultWithDefaults instantiates a new MailboxvalidatorResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailboxvalidatorResultWithDefaults() *MailboxvalidatorResult {
	this := MailboxvalidatorResult{}
	return &this
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetEmailAddress() string {
	if o == nil || o.EmailAddress == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetEmailAddressOk() (*string, bool) {
	if o == nil || o.EmailAddress == nil {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *MailboxvalidatorResult) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *MailboxvalidatorResult) SetDomain(v string) {
	o.Domain = &v
}

// GetIsFree returns the IsFree field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsFree() string {
	if o == nil || o.IsFree == nil {
		var ret string
		return ret
	}
	return *o.IsFree
}

// GetIsFreeOk returns a tuple with the IsFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsFreeOk() (*string, bool) {
	if o == nil || o.IsFree == nil {
		return nil, false
	}
	return o.IsFree, true
}

// HasIsFree returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsFree() bool {
	if o != nil && o.IsFree != nil {
		return true
	}

	return false
}

// SetIsFree gets a reference to the given string and assigns it to the IsFree field.
func (o *MailboxvalidatorResult) SetIsFree(v string) {
	o.IsFree = &v
}

// GetIsSyntax returns the IsSyntax field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsSyntax() string {
	if o == nil || o.IsSyntax == nil {
		var ret string
		return ret
	}
	return *o.IsSyntax
}

// GetIsSyntaxOk returns a tuple with the IsSyntax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsSyntaxOk() (*string, bool) {
	if o == nil || o.IsSyntax == nil {
		return nil, false
	}
	return o.IsSyntax, true
}

// HasIsSyntax returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsSyntax() bool {
	if o != nil && o.IsSyntax != nil {
		return true
	}

	return false
}

// SetIsSyntax gets a reference to the given string and assigns it to the IsSyntax field.
func (o *MailboxvalidatorResult) SetIsSyntax(v string) {
	o.IsSyntax = &v
}

// GetIsDomain returns the IsDomain field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsDomain() string {
	if o == nil || o.IsDomain == nil {
		var ret string
		return ret
	}
	return *o.IsDomain
}

// GetIsDomainOk returns a tuple with the IsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsDomainOk() (*string, bool) {
	if o == nil || o.IsDomain == nil {
		return nil, false
	}
	return o.IsDomain, true
}

// HasIsDomain returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsDomain() bool {
	if o != nil && o.IsDomain != nil {
		return true
	}

	return false
}

// SetIsDomain gets a reference to the given string and assigns it to the IsDomain field.
func (o *MailboxvalidatorResult) SetIsDomain(v string) {
	o.IsDomain = &v
}

// GetIsSmtp returns the IsSmtp field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsSmtp() string {
	if o == nil || o.IsSmtp == nil {
		var ret string
		return ret
	}
	return *o.IsSmtp
}

// GetIsSmtpOk returns a tuple with the IsSmtp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsSmtpOk() (*string, bool) {
	if o == nil || o.IsSmtp == nil {
		return nil, false
	}
	return o.IsSmtp, true
}

// HasIsSmtp returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsSmtp() bool {
	if o != nil && o.IsSmtp != nil {
		return true
	}

	return false
}

// SetIsSmtp gets a reference to the given string and assigns it to the IsSmtp field.
func (o *MailboxvalidatorResult) SetIsSmtp(v string) {
	o.IsSmtp = &v
}

// GetIsVerified returns the IsVerified field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsVerified() string {
	if o == nil || o.IsVerified == nil {
		var ret string
		return ret
	}
	return *o.IsVerified
}

// GetIsVerifiedOk returns a tuple with the IsVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsVerifiedOk() (*string, bool) {
	if o == nil || o.IsVerified == nil {
		return nil, false
	}
	return o.IsVerified, true
}

// HasIsVerified returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsVerified() bool {
	if o != nil && o.IsVerified != nil {
		return true
	}

	return false
}

// SetIsVerified gets a reference to the given string and assigns it to the IsVerified field.
func (o *MailboxvalidatorResult) SetIsVerified(v string) {
	o.IsVerified = &v
}

// GetIsServerDown returns the IsServerDown field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsServerDown() string {
	if o == nil || o.IsServerDown == nil {
		var ret string
		return ret
	}
	return *o.IsServerDown
}

// GetIsServerDownOk returns a tuple with the IsServerDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsServerDownOk() (*string, bool) {
	if o == nil || o.IsServerDown == nil {
		return nil, false
	}
	return o.IsServerDown, true
}

// HasIsServerDown returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsServerDown() bool {
	if o != nil && o.IsServerDown != nil {
		return true
	}

	return false
}

// SetIsServerDown gets a reference to the given string and assigns it to the IsServerDown field.
func (o *MailboxvalidatorResult) SetIsServerDown(v string) {
	o.IsServerDown = &v
}

// GetIsGreylisted returns the IsGreylisted field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsGreylisted() string {
	if o == nil || o.IsGreylisted == nil {
		var ret string
		return ret
	}
	return *o.IsGreylisted
}

// GetIsGreylistedOk returns a tuple with the IsGreylisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsGreylistedOk() (*string, bool) {
	if o == nil || o.IsGreylisted == nil {
		return nil, false
	}
	return o.IsGreylisted, true
}

// HasIsGreylisted returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsGreylisted() bool {
	if o != nil && o.IsGreylisted != nil {
		return true
	}

	return false
}

// SetIsGreylisted gets a reference to the given string and assigns it to the IsGreylisted field.
func (o *MailboxvalidatorResult) SetIsGreylisted(v string) {
	o.IsGreylisted = &v
}

// GetIsDisposable returns the IsDisposable field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsDisposable() string {
	if o == nil || o.IsDisposable == nil {
		var ret string
		return ret
	}
	return *o.IsDisposable
}

// GetIsDisposableOk returns a tuple with the IsDisposable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsDisposableOk() (*string, bool) {
	if o == nil || o.IsDisposable == nil {
		return nil, false
	}
	return o.IsDisposable, true
}

// HasIsDisposable returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsDisposable() bool {
	if o != nil && o.IsDisposable != nil {
		return true
	}

	return false
}

// SetIsDisposable gets a reference to the given string and assigns it to the IsDisposable field.
func (o *MailboxvalidatorResult) SetIsDisposable(v string) {
	o.IsDisposable = &v
}

// GetIsSuppressed returns the IsSuppressed field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsSuppressed() string {
	if o == nil || o.IsSuppressed == nil {
		var ret string
		return ret
	}
	return *o.IsSuppressed
}

// GetIsSuppressedOk returns a tuple with the IsSuppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsSuppressedOk() (*string, bool) {
	if o == nil || o.IsSuppressed == nil {
		return nil, false
	}
	return o.IsSuppressed, true
}

// HasIsSuppressed returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsSuppressed() bool {
	if o != nil && o.IsSuppressed != nil {
		return true
	}

	return false
}

// SetIsSuppressed gets a reference to the given string and assigns it to the IsSuppressed field.
func (o *MailboxvalidatorResult) SetIsSuppressed(v string) {
	o.IsSuppressed = &v
}

// GetIsRole returns the IsRole field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsRole() string {
	if o == nil || o.IsRole == nil {
		var ret string
		return ret
	}
	return *o.IsRole
}

// GetIsRoleOk returns a tuple with the IsRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsRoleOk() (*string, bool) {
	if o == nil || o.IsRole == nil {
		return nil, false
	}
	return o.IsRole, true
}

// HasIsRole returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsRole() bool {
	if o != nil && o.IsRole != nil {
		return true
	}

	return false
}

// SetIsRole gets a reference to the given string and assigns it to the IsRole field.
func (o *MailboxvalidatorResult) SetIsRole(v string) {
	o.IsRole = &v
}

// GetIsHighRisk returns the IsHighRisk field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsHighRisk() string {
	if o == nil || o.IsHighRisk == nil {
		var ret string
		return ret
	}
	return *o.IsHighRisk
}

// GetIsHighRiskOk returns a tuple with the IsHighRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsHighRiskOk() (*string, bool) {
	if o == nil || o.IsHighRisk == nil {
		return nil, false
	}
	return o.IsHighRisk, true
}

// HasIsHighRisk returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsHighRisk() bool {
	if o != nil && o.IsHighRisk != nil {
		return true
	}

	return false
}

// SetIsHighRisk gets a reference to the given string and assigns it to the IsHighRisk field.
func (o *MailboxvalidatorResult) SetIsHighRisk(v string) {
	o.IsHighRisk = &v
}

// GetIsCatchall returns the IsCatchall field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetIsCatchall() string {
	if o == nil || o.IsCatchall == nil {
		var ret string
		return ret
	}
	return *o.IsCatchall
}

// GetIsCatchallOk returns a tuple with the IsCatchall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetIsCatchallOk() (*string, bool) {
	if o == nil || o.IsCatchall == nil {
		return nil, false
	}
	return o.IsCatchall, true
}

// HasIsCatchall returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasIsCatchall() bool {
	if o != nil && o.IsCatchall != nil {
		return true
	}

	return false
}

// SetIsCatchall gets a reference to the given string and assigns it to the IsCatchall field.
func (o *MailboxvalidatorResult) SetIsCatchall(v string) {
	o.IsCatchall = &v
}

// GetMailboxvalidatorScore returns the MailboxvalidatorScore field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetMailboxvalidatorScore() string {
	if o == nil || o.MailboxvalidatorScore == nil {
		var ret string
		return ret
	}
	return *o.MailboxvalidatorScore
}

// GetMailboxvalidatorScoreOk returns a tuple with the MailboxvalidatorScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetMailboxvalidatorScoreOk() (*string, bool) {
	if o == nil || o.MailboxvalidatorScore == nil {
		return nil, false
	}
	return o.MailboxvalidatorScore, true
}

// HasMailboxvalidatorScore returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasMailboxvalidatorScore() bool {
	if o != nil && o.MailboxvalidatorScore != nil {
		return true
	}

	return false
}

// SetMailboxvalidatorScore gets a reference to the given string and assigns it to the MailboxvalidatorScore field.
func (o *MailboxvalidatorResult) SetMailboxvalidatorScore(v string) {
	o.MailboxvalidatorScore = &v
}

// GetTimeTaken returns the TimeTaken field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetTimeTaken() string {
	if o == nil || o.TimeTaken == nil {
		var ret string
		return ret
	}
	return *o.TimeTaken
}

// GetTimeTakenOk returns a tuple with the TimeTaken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetTimeTakenOk() (*string, bool) {
	if o == nil || o.TimeTaken == nil {
		return nil, false
	}
	return o.TimeTaken, true
}

// HasTimeTaken returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasTimeTaken() bool {
	if o != nil && o.TimeTaken != nil {
		return true
	}

	return false
}

// SetTimeTaken gets a reference to the given string and assigns it to the TimeTaken field.
func (o *MailboxvalidatorResult) SetTimeTaken(v string) {
	o.TimeTaken = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MailboxvalidatorResult) SetStatus(v string) {
	o.Status = &v
}

// GetCreditsAvailable returns the CreditsAvailable field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetCreditsAvailable() int64 {
	if o == nil || o.CreditsAvailable == nil {
		var ret int64
		return ret
	}
	return *o.CreditsAvailable
}

// GetCreditsAvailableOk returns a tuple with the CreditsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetCreditsAvailableOk() (*int64, bool) {
	if o == nil || o.CreditsAvailable == nil {
		return nil, false
	}
	return o.CreditsAvailable, true
}

// HasCreditsAvailable returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasCreditsAvailable() bool {
	if o != nil && o.CreditsAvailable != nil {
		return true
	}

	return false
}

// SetCreditsAvailable gets a reference to the given int64 and assigns it to the CreditsAvailable field.
func (o *MailboxvalidatorResult) SetCreditsAvailable(v int64) {
	o.CreditsAvailable = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *MailboxvalidatorResult) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *MailboxvalidatorResult) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailboxvalidatorResult) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *MailboxvalidatorResult) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *MailboxvalidatorResult) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o MailboxvalidatorResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmailAddress != nil {
		toSerialize["email_address"] = o.EmailAddress
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.IsFree != nil {
		toSerialize["is_free"] = o.IsFree
	}
	if o.IsSyntax != nil {
		toSerialize["is_syntax"] = o.IsSyntax
	}
	if o.IsDomain != nil {
		toSerialize["is_domain"] = o.IsDomain
	}
	if o.IsSmtp != nil {
		toSerialize["is_smtp"] = o.IsSmtp
	}
	if o.IsVerified != nil {
		toSerialize["is_verified"] = o.IsVerified
	}
	if o.IsServerDown != nil {
		toSerialize["is_server_down"] = o.IsServerDown
	}
	if o.IsGreylisted != nil {
		toSerialize["is_greylisted"] = o.IsGreylisted
	}
	if o.IsDisposable != nil {
		toSerialize["is_disposable"] = o.IsDisposable
	}
	if o.IsSuppressed != nil {
		toSerialize["is_suppressed"] = o.IsSuppressed
	}
	if o.IsRole != nil {
		toSerialize["is_role"] = o.IsRole
	}
	if o.IsHighRisk != nil {
		toSerialize["is_high_risk"] = o.IsHighRisk
	}
	if o.IsCatchall != nil {
		toSerialize["is_catchall"] = o.IsCatchall
	}
	if o.MailboxvalidatorScore != nil {
		toSerialize["mailboxvalidator_score"] = o.MailboxvalidatorScore
	}
	if o.TimeTaken != nil {
		toSerialize["time_taken"] = o.TimeTaken
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.CreditsAvailable != nil {
		toSerialize["credits_available"] = o.CreditsAvailable
	}
	if o.ErrorCode != nil {
		toSerialize["error_code"] = o.ErrorCode
	}
	if o.ErrorMessage != nil {
		toSerialize["error_message"] = o.ErrorMessage
	}
	return json.Marshal(toSerialize)
}

type NullableMailboxvalidatorResult struct {
	value *MailboxvalidatorResult
	isSet bool
}

func (v NullableMailboxvalidatorResult) Get() *MailboxvalidatorResult {
	return v.value
}

func (v *NullableMailboxvalidatorResult) Set(val *MailboxvalidatorResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMailboxvalidatorResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMailboxvalidatorResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailboxvalidatorResult(val *MailboxvalidatorResult) *NullableMailboxvalidatorResult {
	return &NullableMailboxvalidatorResult{value: val, isSet: true}
}

func (v NullableMailboxvalidatorResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailboxvalidatorResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


