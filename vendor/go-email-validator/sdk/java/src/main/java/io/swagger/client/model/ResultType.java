/*
 * Email Validator
 * All timeouts are set in seconds with nanosecond precision. For example, 1.505402 is 1 second, 505 milliseconds and 402 microseconds. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * * CHECK_IF_EMAIL_EXIST, CIEE - [check-if-email-exists format](https://github.com/amaurymartiny/check-if-email-exists#%EF%B8%8F-json-output). * MAILBOXVALIDATOR, MAIL_BOX_VALIDATOR, MBV - [mailboxvalidator.com format](https://www.mailboxvalidator.com/api-single-validation). * PROMPT_EMAIL_VERIFICATION_API, PEVA - [Email Verification api format](https://promptapi.com/marketplace/description/email_verification-api) from [promptapi](https://promptapi.com). 
 */
@JsonAdapter(ResultType.Adapter.class)
public enum ResultType {
  CHECK_IF_EMAIL_EXIST("CHECK_IF_EMAIL_EXIST"),
  CIEE("CIEE"),
  MAILBOXVALIDATOR("MAILBOXVALIDATOR"),
  MAIL_BOX_VALIDATOR("MAIL_BOX_VALIDATOR"),
  MBV("MBV"),
  PROMPT_EMAIL_VERIFICATION_API("PROMPT_EMAIL_VERIFICATION_API"),
  PEVA("PEVA");

  private String value;

  ResultType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ResultType fromValue(String text) {
    for (ResultType b : ResultType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<ResultType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ResultType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ResultType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ResultType.fromValue(String.valueOf(value));
    }
  }
}
