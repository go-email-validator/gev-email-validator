/*
 * Email Validator
 * All timeouts are set in seconds with nanosecond precision. For example, 1.505402 is 1 second, 505 milliseconds and 402 microseconds. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CheckIfEmailExistSMTP
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-02-05T12:42:25.901Z[GMT]")
public class CheckIfEmailExistSMTP {
  @SerializedName("can_connect_smtp")
  private Boolean canConnectSmtp = null;

  @SerializedName("has_full_inbox")
  private Boolean hasFullInbox = null;

  @SerializedName("is_catch_all")
  private Boolean isCatchAll = null;

  @SerializedName("is_deliverable")
  private Boolean isDeliverable = null;

  @SerializedName("is_disabled")
  private Boolean isDisabled = null;

  public CheckIfEmailExistSMTP canConnectSmtp(Boolean canConnectSmtp) {
    this.canConnectSmtp = canConnectSmtp;
    return this;
  }

   /**
   * Get canConnectSmtp
   * @return canConnectSmtp
  **/
  @Schema(description = "")
  public Boolean isCanConnectSmtp() {
    return canConnectSmtp;
  }

  public void setCanConnectSmtp(Boolean canConnectSmtp) {
    this.canConnectSmtp = canConnectSmtp;
  }

  public CheckIfEmailExistSMTP hasFullInbox(Boolean hasFullInbox) {
    this.hasFullInbox = hasFullInbox;
    return this;
  }

   /**
   * Get hasFullInbox
   * @return hasFullInbox
  **/
  @Schema(description = "")
  public Boolean isHasFullInbox() {
    return hasFullInbox;
  }

  public void setHasFullInbox(Boolean hasFullInbox) {
    this.hasFullInbox = hasFullInbox;
  }

  public CheckIfEmailExistSMTP isCatchAll(Boolean isCatchAll) {
    this.isCatchAll = isCatchAll;
    return this;
  }

   /**
   * Get isCatchAll
   * @return isCatchAll
  **/
  @Schema(description = "")
  public Boolean isIsCatchAll() {
    return isCatchAll;
  }

  public void setIsCatchAll(Boolean isCatchAll) {
    this.isCatchAll = isCatchAll;
  }

  public CheckIfEmailExistSMTP isDeliverable(Boolean isDeliverable) {
    this.isDeliverable = isDeliverable;
    return this;
  }

   /**
   * Get isDeliverable
   * @return isDeliverable
  **/
  @Schema(description = "")
  public Boolean isIsDeliverable() {
    return isDeliverable;
  }

  public void setIsDeliverable(Boolean isDeliverable) {
    this.isDeliverable = isDeliverable;
  }

  public CheckIfEmailExistSMTP isDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * Get isDisabled
   * @return isDisabled
  **/
  @Schema(description = "")
  public Boolean isIsDisabled() {
    return isDisabled;
  }

  public void setIsDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckIfEmailExistSMTP checkIfEmailExistSMTP = (CheckIfEmailExistSMTP) o;
    return Objects.equals(this.canConnectSmtp, checkIfEmailExistSMTP.canConnectSmtp) &&
        Objects.equals(this.hasFullInbox, checkIfEmailExistSMTP.hasFullInbox) &&
        Objects.equals(this.isCatchAll, checkIfEmailExistSMTP.isCatchAll) &&
        Objects.equals(this.isDeliverable, checkIfEmailExistSMTP.isDeliverable) &&
        Objects.equals(this.isDisabled, checkIfEmailExistSMTP.isDisabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canConnectSmtp, hasFullInbox, isCatchAll, isDeliverable, isDisabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckIfEmailExistSMTP {\n");
    
    sb.append("    canConnectSmtp: ").append(toIndentedString(canConnectSmtp)).append("\n");
    sb.append("    hasFullInbox: ").append(toIndentedString(hasFullInbox)).append("\n");
    sb.append("    isCatchAll: ").append(toIndentedString(isCatchAll)).append("\n");
    sb.append("    isDeliverable: ").append(toIndentedString(isDeliverable)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
