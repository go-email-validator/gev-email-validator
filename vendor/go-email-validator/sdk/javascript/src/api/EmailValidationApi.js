/**
 * Email Validator
 * All timeouts are set in seconds with nanosecond precision. For example, 1.505402 is 1 second, 505 milliseconds and 402 microseconds. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EmailRequest from '../model/EmailRequest';
import EmailResponse from '../model/EmailResponse';
import ResultType from '../model/ResultType';
import UnexpectedError from '../model/UnexpectedError';

/**
* EmailValidation service.
* @module api/EmailValidationApi
* @version 0.0.1
*/
export default class EmailValidationApi {

    /**
    * Constructs a new EmailValidationApi. 
    * @alias module:api/EmailValidationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the emailValidationSingleValidationGet operation.
     * @callback module:api/EmailValidationApi~emailValidationSingleValidationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST request contains additional parameters for detailed configuration
     * @param {String} email 
     * @param {Object} opts Optional parameters
     * @param {module:model/ResultType} opts.resultType ResultTypeDescription
     * @param {module:api/EmailValidationApi~emailValidationSingleValidationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EmailResponse}
     */
    emailValidationSingleValidationGet(email, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling emailValidationSingleValidationGet");
      }

      let pathParams = {
        'email': email
      };
      let queryParams = {
        'result_type': opts['resultType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['AuthKey', 'RapidApiKey', 'RapidApiSecret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EmailResponse;
      return this.apiClient.callApi(
        '/v1/validation/single/{email}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the emailValidationSingleValidationPost operation.
     * @callback module:api/EmailValidationApi~emailValidationSingleValidationPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EmailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/EmailRequest} body 
     * @param {module:api/EmailValidationApi~emailValidationSingleValidationPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EmailResponse}
     */
    emailValidationSingleValidationPost(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling emailValidationSingleValidationPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['AuthKey', 'RapidApiKey', 'RapidApiSecret'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EmailResponse;
      return this.apiClient.callApi(
        '/v1/validation/single', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
